
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PartyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  code: 'code',
  contact: 'contact',
  credit: 'credit',
  dlno: 'dlno',
  gst: 'gst',
  state: 'state',
  type: 'type',
  shipping_address: 'shipping_address',
  credit_period: 'credit_period'
};

exports.Prisma.CourierScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  hsn: 'hsn',
  min: 'min',
  rate: 'rate',
  tax: 'tax',
  vendor: 'vendor',
  mrp: 'mrp',
  stockIn: 'stockIn',
  stockHold: 'stockHold',
  stockOut: 'stockOut',
  effectiveStock: 'effectiveStock',
  productType: 'productType'
};

exports.Prisma.InRegisterScalarFieldEnum = {
  id: 'id',
  regNo: 'regNo',
  party: 'party',
  item: 'item',
  qty: 'qty',
  department: 'department',
  deptRef: 'deptRef',
  remark: 'remark',
  others: 'others',
  courier: 'courier',
  complete: 'complete',
  date: 'date'
};

exports.Prisma.SaleEntryScalarFieldEnum = {
  id: 'id',
  date: 'date',
  party_name: 'party_name',
  invoice_number: 'invoice_number',
  item_name: 'item_name',
  quantity: 'quantity',
  sell_rate: 'sell_rate',
  profit: 'profit'
};

exports.Prisma.SalesByItemScalarFieldEnum = {
  id: 'id',
  date: 'date',
  itemname: 'itemname',
  qty: 'qty'
};

exports.Prisma.SaleData2425ScalarFieldEnum = {
  party_name: 'party_name',
  invoice_date: 'invoice_date',
  invoice_no: 'invoice_no',
  item_name: 'item_name',
  quantity: 'quantity',
  rate: 'rate',
  uid: 'uid',
  id: 'id'
};

exports.Prisma.StockItemScalarFieldEnum = {
  id: 'id',
  uid: 'uid',
  name: 'name',
  hsncode: 'hsncode',
  buyingprice: 'buyingprice',
  supplier: 'supplier',
  tax: 'tax',
  stock: 'stock'
};

exports.Prisma.PermanentItemScalarFieldEnum = {
  id: 'id',
  uid: 'uid',
  name: 'name',
  reorder_level: 'reorder_level',
  product_note: 'product_note',
  supplier: 'supplier',
  udrl: 'udrl'
};

exports.Prisma.SaleTempEntryScalarFieldEnum = {
  id: 'id',
  partyname: 'partyname',
  invcdt: 'invcdt',
  itemName: 'itemName',
  disc: 'disc',
  qty: 'qty',
  rate: 'rate',
  shpAdd: 'shpAdd'
};

exports.Prisma.CustomerPricingRuleScalarFieldEnum = {
  id: 'id',
  party_id: 'party_id',
  item_id: 'item_id',
  min_qty: 'min_qty',
  fixed_price: 'fixed_price',
  effective_from: 'effective_from',
  effective_to: 'effective_to'
};

exports.Prisma.ProductBatchScalarFieldEnum = {
  id: 'id',
  stockitemId: 'stockitemId',
  batchNo: 'batchNo',
  serialNo: 'serialNo',
  expiryDate: 'expiryDate',
  mfgDate: 'mfgDate',
  quantity: 'quantity',
  createdAt: 'createdAt'
};

exports.Prisma.PurchaseEntryScalarFieldEnum = {
  id: 'id',
  date: 'date',
  partyName: 'partyName',
  purchaseNumber: 'purchaseNumber',
  itemName: 'itemName',
  quantity: 'quantity',
  purchaseRate: 'purchaseRate',
  purchaseReferenceNumber: 'purchaseReferenceNumber'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Party: 'Party',
  Courier: 'Courier',
  Department: 'Department',
  Item: 'Item',
  inRegister: 'inRegister',
  saleEntry: 'saleEntry',
  SalesByItem: 'SalesByItem',
  SaleData2425: 'SaleData2425',
  StockItem: 'StockItem',
  PermanentItem: 'PermanentItem',
  saleTempEntry: 'saleTempEntry',
  CustomerPricingRule: 'CustomerPricingRule',
  ProductBatch: 'ProductBatch',
  PurchaseEntry: 'PurchaseEntry'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
